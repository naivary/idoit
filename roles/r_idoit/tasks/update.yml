- name: Create update directory
  ansible.builtin.file:
    path: "{{ __update_dir }}"
    state: directory
- name: Download required version zip file
  ansible.builtin.get_url:
    url: "https://kb.i-doit.com/de/assets/downloads/dl-archive/idoit-{{ to_version }}-update.zip"
    dest: "{{ __update_dir }}"
    mode: "0755"
- name: "Create version directory"
  ansible.builtin.file:
    path: "{{ __versions_dir }}/v{{ to_version }}"
    state: directory
- name: "Unzip downloaded version"
  ansible.builtin.unarchive:
    remote_src: true
    src: "{{ __update_dir }}/idoit-{{ to_version }}-update.zip"
    dest: "{{ __versions_dir }}/v{{ to_version }}"
- name: "Copy version to /var/www/html"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ __versions_dir }}/v{{ to_version }}/updates/versions/{{ to_version }}/"
    dest: "/var/www/html/updates/versions/v{{ to_version }}"
- name: "Remove undefined constant from source code (bug in v26 of i-doit)"
  ansible.builtin.lineinfile:
    path: "{{ item }}"
    search_string: "const AUTH_DOMAIN = self::AUTH_DOMAIN_SYSTEM;"
    state: absent
  when: "{{ (system_idoit_version | int) == 26 }}"
  loop:
    - "/var/www/html/src/idoit/Console/Command/Idoit/FeatureManagerCommand.php"
    - "/var/www/html/src/idoit/Console/Command/Idoit/SetEnvVarCommand.php"
- name: "Update i-doit from {{ system_idoit_version }} to {{ to_version }}"
  ansible.builtin.command:
  args:
    chdir: "/var/www/html"
    argv:
      - sudo
      - php
      - console.php
      - update
      - --no-interaction
      - "--user={{ idoit_admin_center_user }}"
      - "--password={{ idoit_admin_center_password }}"
      - "--zip={{ __update_dir }}/idoit-{{ to_version }}-update.zip"
      - "--v=v{{ to_version }}"
- name: "Set System i-doit version to {{ to_version }}"
  ansible.builtin.set_fact:
    system_idoit_version: "{{ to_version }}"
